name: LastExtendedDotNetAutoBuild

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout dein Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Skripte hinzufügen
      - name: Add Example Scripts
        run: |
          mkdir -p bin/assets
          mkdir -p bin/inventory/ScriptsLibrary
          git init temp_repo
          cd temp_repo
          git remote add origin https://github.com/ManfredAabye/opensim-ossl-example-scripts.git
          git config core.sparseCheckout true
          echo "ScriptsAssetSet/" >> .git/info/sparse-checkout
          echo "inventory/ScriptsLibrary/" >> .git/info/sparse-checkout
          git pull origin main
          cp -r ScriptsAssetSet/* ../bin/assets/
          cp -r inventory/ScriptsLibrary/* ../bin/inventory/ScriptsLibrary/
          cd ..
          rm -rf temp_repo

      # 3. MoneyServer hinzufügen
      - name: Add MoneyServer
        run: |
          mkdir -p addon-modules
          mkdir -p bin
          git init temp_repo
          cd temp_repo
          git remote add origin https://github.com/ManfredAabye/opensimcurrencyserver-dotnet.git
          git config core.sparseCheckout true
          echo "addon-modules/" >> .git/info/sparse-checkout
          echo "bin/" >> .git/info/sparse-checkout
          git pull origin main
          cp -r addon-modules/* ../addon-modules/
          cp -r bin/* ../bin/
          cd ..
          rm -rf temp_repo

      # 4. Beispielregion hinzufügen
      - name: Add Example Region
        run: |
          mkdir -p bin
          git init temp_repo
          cd temp_repo
          git remote add origin https://github.com/ManfredAabye/OpenSim-Terrain.git
          git pull origin main
          cp -r * ../bin/
          cd ..
          rm -rf temp_repo

      # 5. Female Avatar Assets hinzufügen
      - name: Add Female Avatar Assets
        run: |
          mkdir -p bin/Library
          git init temp_repo
          cd temp_repo
          git remote add origin https://github.com/RuthAndRoth/Ruth2.git
          git config core.sparseCheckout true
          echo "Artifacts/IAR/" >> .git/info/sparse-checkout
          git pull origin master
          cp -r Artifacts/IAR/* ../bin/Library/
          cd ..
          rm -rf temp_repo

      # 6. Male Avatar Assets hinzufügen
      - name: Add Male Avatar Assets
        run: |
          mkdir -p bin/Library
          git init temp_repo
          cd temp_repo
          git remote add origin https://github.com/RuthAndRoth/Roth2.git
          git config core.sparseCheckout true
          echo "Artifacts/IAR/" >> .git/info/sparse-checkout
          git pull origin master
          cp -r Artifacts/IAR/* ../bin/Library/
          cd ..
          rm -rf temp_repo

      # 7. Prebuild ausführen
      - name: Run Prebuild Script
        run: |
          chmod +x runprebuild.sh
          ./runprebuild.sh

      # 8. Build ausführen
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Solution
        run: dotnet build --configuration Release

      # 9. Tests ausführen
      - name: Run Tests
        run: dotnet test --no-build --verbosity normal

      # 10. Artefakte speichern
      - name: Publish Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: BuildOutput
          path: bin/Release
